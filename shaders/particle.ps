#include "common.xrh"
#include "gbuffer.xrh"

struct v2p
{
 	float2 tc0: TEXCOORD0; // base
	float4 c: COLOR0; // diffuse
	float4 tctexgen	: TEXCOORD1;
    float3 position : TEXCOORD2;
};

//	Must be less than view near
#define	DEPTH_EPSILON	0.1f
//////////////////////////////////////////////////////////////////////////////////////////
// Pixel
float4 main (v2p I): COLOR
{
    float4 Albedo = tex2D(s_base, I.tc0);
    //Albedo.rgb = sRgbToLinear(Albedo.rgb);
    float4 result = I.c * Albedo;

	//	Igor: additional depth test
	float Depth = GetPosition(I.tctexgen.xy/I.tctexgen.w).z;
	float spaceDepth = Depth-I.tctexgen.z-DEPTH_EPSILON;
	result.a *= Contrast( saturate(spaceDepth*1.3f), 2);
	result.rgb *= Contrast( saturate(spaceDepth*1.3f), 2);
	
	// Deathman - считаем туман второй раз, но теперь специально для этого конкретного объекта
    float Fog = CalcFogness(I.position);
    //Fixit when original particle textures with no alpha will be replaced
    //result.rgb = ApplyFogness(result.rgb, Fog);
    float FogOpacity = invert(pow(Fog, 4.4f));
    
//#ifdef USE_INV_ALPHA
//#endif
    
    float Opacity = result.a * FogOpacity;
	
    return float4(result.rgb, Opacity);
}
