//////////////////////////////////////////////////////////////////////////////////////////
#include "common.xrh"
#include "chromatic_abberations.xrh"
//////////////////////////////////////////////////////////////////////////////////////////
struct v2p
{
	float4 color: COLOR0; // multiplier, color.w = noise_amount
	float4 gray: COLOR1; // (.3,.3,.3.,amount)
 	float2 tc0: TEXCOORD0; // base1 (duality)
 	float2 tc1: TEXCOORD1; // base2 (duality)
 	float2 tc2: TEXCOORD2; // base  (noise)
};
//////////////////////////////////////////////////////////////////////////////////////////
uniform sampler2D s_base0;
uniform sampler2D s_base1;
uniform sampler2D s_grad0;
uniform sampler2D s_grad1;
uniform sampler2D s_noise;
uniform float4 c_brightness;
uniform float4 c_colormap;
//////////////////////////////////////////////////////////////////////////////////////////
// Pixel
float4 main (v2p I): COLOR
{
    //float2 ResizeAspect = float2(1920, 1080) / screen_res.xy;

    //Resize viewport
    //float2 TexCoords0 = I.tc0 * ResizeAspect + (1.0f - ResizeAspect) / 2.0f;
    //float2 TexCoords1 = I.tc1 * ResizeAspect + (1.0f - ResizeAspect) / 2.0f;

    float2 TexCoords0 = I.tc0; 
    float2 TexCoords1 = I.tc1; 

	float3 t_0 = tex2Dlod0 (s_base0, TexCoords0);
	float3 t_1 = tex2Dlod0 (s_base1, TexCoords1);
    float3 image_o = (t_0 + t_1) * .5;
    
#ifdef USE_CHROMATIC_ABBERATION
    image_o.rgb = ChromaticAberration (s_base, image_o.rgb, (TexCoords0 + TexCoords1) * 0.5f);
#endif
    
    float grad_i = dot(image_o, (0.3333h).xxx);

    float3 image0 = tex2Dlod0(s_grad0, float2(grad_i, 0.5f));
    float3 image1 = tex2Dlod0(s_grad1, float2(grad_i, 0.5f));
    float3 image = lerp(image0, image1, c_colormap.y);
    image = lerp(image_o, image, c_colormap.x);
    
    float gray = dot (image, I.gray);
    image = lerp (gray, image, I.gray.w);

	float4 t_noise = tex2Dlod0 (s_noise, I.tc2);
	float3 noised = image * t_noise * 2;
    image = lerp (noised, image, I.color.w);
    
    image = (image * I.color + c_brightness) * 2;
    
#if VIGNETTE_MODE >= 1
#if VIGNETTE_MODE == 1
    float VignettePower = 0.5f;  
#elif VIGNETTE_MODE == 2
    float VignettePower = vignette_power;
#endif
	//https://www.xrhadertoy.com/view/ms3GDs
    float Vignette = pow(16.0f * TexCoords1.x * TexCoords1.y * (1.0f - TexCoords1.x) * (1.0f - TexCoords1.y), VignettePower);//0.1f);
    image *= Vignette;// + (1.0f - Vignette) * (1.0f - VignettePower);
#endif    

#ifdef USE_SEPIA
    image *= sepia_params.rgb + (1.0f - sepia_params.rgb) * (1.0f - sepia_params.a);
#endif

    //if(TexCoords0.x > 1.0f || TexCoords0.y > 1.0f || TexCoords0.x < 0.0f || TexCoords0.y < 0.0f)
    //    image *= NULL;

    return float4 (image, 1);
}
//////////////////////////////////////////////////////////////////////////////////////////
