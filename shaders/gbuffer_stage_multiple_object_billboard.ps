///////////////////////////////////////////////////////////////////////////////////
// Created: 25.10.2023
// Author: Deathman
// Nocturning studio for NS Project X
///////////////////////////////////////////////////////////////////////////////////
#include "common.xrh"
#include "gbuffer.xrh"
///////////////////////////////////////////////////////////////////////////////////
struct Interpolators
{
	float4 HomogeniousPosition: POSITION;
	float3 Position: TEXCOORD0;
	float2 TexCoords0: TEXCOORD1;
	float2 TexCoords1: TEXCOORD2;
    float TransitionFactor: TEXCOORD3;
    float Ambient: TEXCOORD4;
    float SunOcclusion: TEXCOORD5;
    float OpacityFactor: TEXCOORD6;
};
///////////////////////////////////////////////////////////////////////////////////
GBufferPacked main (Interpolators Input)
{
    GBuffer GBuffer;
	
	float4 Albedo0 = tex2D (s_base, Input.TexCoords0);
	float4 Albedo1 = tex2D (s_base, Input.TexCoords1);
	float4 Albedo = lerp (Albedo0, Albedo1, Input.TransitionFactor);

    Albedo.a *= Input.OpacityFactor;

    clip (Albedo.a - 0.8f);

    GBuffer.Albedo = Albedo;
	
	float4 NormalAndAO0 = tex2D (s_hemi, Input.TexCoords0);
	float4 NormalAndAO1 = tex2D (s_hemi, Input.TexCoords1);
	float4 NormalAndAO = lerp (NormalAndAO0, NormalAndAO1, Input.TransitionFactor);

    GBuffer.AO = NormalAndAO.a * AO_BRIGHTNESS;

    GBuffer.BackedAO = 1.0f;
    
    GBuffer.Normal = -normalize (NormalAndAO.rgb);

    GBuffer.Position = Input.Position;

    GBuffer.Roughness = 1.0f;
    
    GBuffer.Metallness = 0.0f;

    GBuffer.Subsurface = 0.0f;

    GBuffer.Emissive = 0.0f;

    return PackGBuffer (GBuffer);
}
///////////////////////////////////////////////////////////////////////////////////
