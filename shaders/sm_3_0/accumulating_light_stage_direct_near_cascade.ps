///////////////////////////////////////////////////////////////////////////////////
// Created: 20.11.2023
// Author: Deathman
// Nocturning studio for NS Project X
///////////////////////////////////////////////////////////////////////////////////
#include "common.h"
#include "gbuffer.h"
#include "BRDF.h"
#include "accumulation_helper.h"
#include "shadow_filtering.h"
///////////////////////////////////////////////////////////////////////////////////
struct Interpolators
{
	float4 HomogeniousPosition: POSITION;
    float4 TexCoords: TEXCOORD0;
};
///////////////////////////////////////////////////////////////////////////////////
Accumulator main (Interpolators Input)
{
    GBuffer GBuffer = UnpackGBufferWithProjection (Input.TexCoords);
    
#ifndef USE_POSITION_WITH_NORMALS_BIAS
    GBuffer.Position += GBuffer.Normal * def_virtualh * 0.015f;
#endif

    float2 LightingModel = Calculate_Lighting_Model (GBuffer.Glossiness, GBuffer.Position, GBuffer.Normal, Ldynamic_dir.xyz);
    
    float3 Diffuse = LightingModel.xxx;
    float3 Specular = LightingModel.yyy;
    
    float4 Position = float4 (GBuffer.Position, 1.0h);
    float4 ShadowMapTexCoords = mul (m_shadow, Position);
    float ShadowMap = get_shadow_map (ShadowMapTexCoords);
    
    Diffuse *= Ldynamic_color.rgb * ShadowMap.xxx;
    Specular *= Ldynamic_color.rgb * ShadowMap.xxx;
    
    Accumulator Output = PackLightingAccumulator (Diffuse, Specular);
    return Output;
}
///////////////////////////////////////////////////////////////////////////////////