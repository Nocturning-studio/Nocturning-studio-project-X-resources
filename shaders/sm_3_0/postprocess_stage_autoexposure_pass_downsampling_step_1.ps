#include "common.h"

struct v2p
{
  vector2 tc0: TEXCOORD0; // Central
  vector2 tc1: TEXCOORD1; // -1,+1
  vector2 tc2: TEXCOORD2; // -2,+2
  vector2 tc3: TEXCOORD3; // -3,+3
};

//////////////////////////////////////////////////////////////////////////////////////////
vector luminance (vector2 tc)
{
	vector3 source = tex2Dlod0 (s_image, tc).rgb;
    return avg3 (source);
}
//////////////////////////////////////////////////////////////////////////////////////////
// 	perform 2x2=4s convolution, working on 4x4=16p area
//	that means 256x256 source will be scaled to (256/4)x(256/4) = 64x64p
//	a):	256x256 => 64x64p	with log 
//	b):	64x64p	=> 8x8p
//	c):	8x8p	=> 1x1p		with exp
vector4 main (v2p I): COLOR
{
	// first 8 bilinear samples (8x4 = 32 pixels)
	vector4 final;
    
    final.x = luminance (I.tc0.xy);
    final.y = luminance (I.tc1.xy);
    final.z = luminance (I.tc2.xy);
    final.w = luminance (I.tc3.xy);

    return final;
}
//////////////////////////////////////////////////////////////////////////////////////////