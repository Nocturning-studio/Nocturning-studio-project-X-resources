////////////////////////////////////////////////////////////////////////////////
// Created: 07.08.2023
// Autor: Deathman
// Nocturning studio for NS Project X
////////////////////////////////////////////////////////////////////////////////
#include "common.h"
#include "gbuffer.h"
////////////////////////////////////////////////////////////////////////////////
struct Interpolators
{
	vector4 HomogeniousPosition: POSITION;
	vector3 Position: TEXCOORD0;
	vector3 Normal: TEXCOORD1;
	vector2 UV: TEXCOORD2;
	vector2 DetailUV: TEXCOORD3;
	vector2 Lighting: TEXCOORD4;
};
////////////////////////////////////////////////////////////////////////////////
GBuffer main (Interpolators Input)
{
	// Diffuse color
	vector4 Albedo = tex2D (s_base, Input.UV);
    Albedo.rgb *= 2 * tex2D (s_detail, Input.DetailUV);

    vector Lighting = (Albedo.a + avg3 (tex2D (s_lmap, Input.UV).rgb)) * (AO_BRIGHTNESS - 0.2f);

#ifdef USE_R2_STATIC_SUN
	vector  MaterialID = tex2D(s_lmap, Input.UV).a;
#else
    vector MaterialID = xmaterial;
#endif

	// Normal for Geometry Buffer
	vector3 Normal = normalize (Input.Normal);

	// Position for Geometry Buffer
	vector3 Position = Input.Position;

#ifdef USE_POSITION_WITH_NORMALS_BIAS
	Position += Normal * def_virtualh * 0.015f;
#endif
	
	// Out glossiness
    vector Glossiness = def_gloss;

	// Pack Geometry buffer
    GBuffer Output = PackGBuffer (Position, MaterialID,
								  Normal, Lighting,
								  Albedo.rgb, Glossiness);

    return Output;
}
////////////////////////////////////////////////////////////////////////////////