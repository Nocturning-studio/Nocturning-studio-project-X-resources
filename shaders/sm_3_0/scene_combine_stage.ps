////////////////////////////////////////////////////////////////////////////
//	Created		: 26.11.2023
//	Author		: Deathman
//  Nocturning studio for NS Project X
////////////////////////////////////////////////////////////////////////////
#include "common.h"
#include "gbuffer.h"
#include "accumulation_helper.h"
#include "ambient_light.h"
#include "fog.h"
#include "reflection.h"
#include "BRDF.h"
////////////////////////////////////////////////////////////////////////////
float4 main (float2 TexCoords: TEXCOORD0): COLOR
{
    GBuffer GBuffer = UnpackGBuffer (TexCoords);
    LightingData Light = UnpackLightingAccumulator (TexCoords);
    
    float3 AmbientLighting = CalculateAmbient (GBuffer.AO);
    
#ifdef AO_ENABLED
    AmbientLighting *= tex2D(s_ao, TexCoords).r;
#endif
    
    float3 DiffuseLighting = (AmbientLighting + Light.Diffuse);
    
    float3 SkyReflections = BlurredSkyReflectionApproximated (GBuffer.Position, GBuffer.Normal, GBuffer.Glossiness);
    
    float3 SpecularLighting = Light.Specular * SkyReflections * 2.0h;
	
    float3 SceneColor = (GBuffer.Albedo * DiffuseLighting + SpecularLighting) * GBuffer.BakedAO;
    
    FogComponents Fog = CalcFog (GBuffer.Position);
    
    SceneColor = lerp (SceneColor, Fog.Color, Fog.Fogness);
    
    float3 OutputColor = SceneColor;
    float Opacity = saturate (pow (Fog.Fogness, 2.0h));
    return float4 (OutputColor, Opacity);
}
////////////////////////////////////////////////////////////////////////////