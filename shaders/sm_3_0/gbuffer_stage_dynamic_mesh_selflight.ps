///////////////////////////////////////////////////////////////////////////////////
// Created: 25.10.2023
// Author: Deathman
// Nocturning studio for NS Project X
///////////////////////////////////////////////////////////////////////////////////
#include "common.h"
#include "material.h"
#include "gbuffer.h"
///////////////////////////////////////////////////////////////////////////////////
struct Interpolators
{
	vector4 HomogeniousPosition : POSITION;
	vector3 Position 			: TEXCOORD0;
	vector3 TBN0 				: TEXCOORD1;
	vector3 TBN1				: TEXCOORD2;
	vector3 TBN2 				: TEXCOORD3;
	vector2 UV					: TEXCOORD4;
};
///////////////////////////////////////////////////////////////////////////////////
#define EMISSIVE_POWER 2.0h
///////////////////////////////////////////////////////////////////////////////////
GBufferPacked main (Interpolators Input)
{
    GBuffer GBuffer;
	
	matrix3x3 TBN = matrix3x3(Input.TBN0, Input.TBN1, Input.TBN2);

    GBuffer.Albedo = tex2D (s_base, Input.UV) * EMISSIVE_POWER;

    GBuffer.Normal = normalize (mul (TBN, vector3 (0.5f, 0.5f, 1.0h)));

    GBuffer.Position = Input.Position;
	
#ifdef USE_POSITION_WITH_NORMALS_BIAS
    GBuffer.Position += GBuffer.Normal * def_virtualh * 0.015f;
#endif

    GBuffer.AO = EMISSIVE_POWER;
	
    GBuffer.BakedAO = 1.0h;
	
    GBuffer.Glossiness = def_gloss;
	
	GBufferPacked Output = PackGBuffer(GBuffer);
	return Output;
}
///////////////////////////////////////////////////////////////////////////////////
