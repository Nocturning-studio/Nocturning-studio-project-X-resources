#include "common.h"
#include "BRDF.h"

//////////////////////////////////////////////////////////////////////////////////////////
// Pixel
// Note: this is a half-sphere
uniform half3 direction;
half4 main (float4 tc: TEXCOORD0): COLOR
{
  float4 _P = tex2Dproj (s_gbuffer_position, tc);
    half4 _N = tex2Dproj (s_gbuffer_normal, tc);
    float m = _P.w;

    half3 L2P = _P.xyz - Ldynamic_pos.xyz; // light2point
    half3 L2P_N = normalize (L2P); // light2point
    float rsqr = dot (L2P, L2P); // distance 2 light (squared)
    float att = saturate (1 - rsqr * Ldynamic_pos.w); // q-linear attenuate
    /*
  float  	light	= tex3D(s_material, float3(dot(VecToLight, L2P_N), dot(HalfAngle, L2P_N), Material));
    //saturate	(dot(-L2P_N,_N.xyz));
  */
  //float4 light = plight_local (m, _P, _N, Ldynamic_pos, Ldynamic_pos.w, rsqr);
    float hemi = saturate (dot (L2P_N, direction));

  // Final color
    return half4 (Ldynamic_color.xyz * att /* * light */ * hemi, 0);
}
