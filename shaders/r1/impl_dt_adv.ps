////////////////////////////////////////////////////////////////////////////
//	Created		: 01.08.2023
//	Author		: Deathman
//  Nocturning studio for NS Project X
////////////////////////////////////////////////////////////////////////////
#include "common.h"
////////////////////////////////////////////////////////////////////////////
uniform sampler2D s_dt_r;
uniform sampler2D s_dt_g;
uniform sampler2D s_dt_b;
uniform sampler2D s_dt_a;
uniform sampler2D s_mask;
////////////////////////////////////////////////////////////////////////////
struct v2p
{
    float2 tc0: TEXCOORD0; // base
    float2 tc1: TEXCOORD1; // lmap
    float2 tc2: TEXCOORD2; // detail
    float4 c0: COLOR0; // hemi, c0.a * 
    float4 c1: COLOR1; // sun,  c1.a + 
    float fog: FOG;
};
////////////////////////////////////////////////////////////////////////////
// Pixel
float4 main (v2p I): COLOR
{
    float4 t_base = tex2D (s_base, I.tc0);
    float4 t_lmap = tex2D (s_lmap, I.tc1);

	// lighting
    float3 l_base = t_lmap.rgb; // base light-map
    float3 l_hemi = I.c0 * t_base.a; // hemi is implicitly inside texture
    float3 l_sun = I.c1 * t_lmap.a; // sun color
    float3 light = L_ambient + l_base + l_sun + l_hemi;

	// calc D-texture
    float4 mask = tex2D (s_mask, I.tc0);
    mask = mask / dot (mask, 1.0f);
    float3 red_detail = tex2D (s_dt_r, I.tc2) * mask.r;
    float3 green_detail = tex2D (s_dt_g, I.tc2) * mask.g;
    float3 blue_detail = tex2D (s_dt_b, I.tc2) * mask.b;
    float3 alpha_detail = tex2D (s_dt_a, I.tc2) * mask.a;
    float3 detail = red_detail + green_detail + blue_detail + alpha_detail;
	
	// final-color
    float3 final = (light * t_base.rgb * 2) * detail * 2;
    final = ApplyFogness (final, I.fog);
	
    final = CalcTonemap (final);
    
	// out
    return float4 (final.rgb, 1);
	// return 	float4	(light*detail*2,1);
}
