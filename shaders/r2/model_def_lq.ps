#include "common.h"
#include "shared\fog.h"
#include "hdr.h"

struct v2p
{
 	float2 tc0: TEXCOORD0; // base
    float3 position: TEXCOORD1;
  	float3 c0: COLOR0; // sun
};

struct PixelShaderOutputStruct
{
	float4 Generic_0: COLOR0;
	float4 Position: COLOR1;
};
//////////////////////////////////////////////////////////////////////////////////////////
PixelShaderOutputStruct main (v2p I)
{
	float4 t_base = tex2D (s_base, I.tc0);

	float3 light = I.c0;
	float3 final = light * t_base * 2;
	
	// Deathman - считаем туман второй раз, но теперь специально для этого конкретного объекта
    float Fog = CalcFogness (I.position);
    final.rgb = lerp (final.rgb, fog_params.rgb, Fog);
    float Opacity = (1.0h - pow (Fog, 2.2h)) * t_base.a;

    final = Calc_hdr (final);
    
    PixelShaderOutputStruct Output;
    Output.Generic_0 = float4 (final.rgb, Opacity);
    Output.Position = float4 (I.position, 1.0);
    return Output;
}
