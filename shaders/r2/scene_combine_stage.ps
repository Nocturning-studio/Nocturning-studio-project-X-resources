////////////////////////////////////////////////////////////////////////////
//	Created		: 26.11.2023
//	Author		: Deathman
//  Nocturning studio for NS Project X
////////////////////////////////////////////////////////////////////////////
#include "common.h"
#include "gbuffer.h"
#include "accumulation_helper.h"
#include "ambient_light.h"
#include "reflection.h"
#include "BRDF.h"
////////////////////////////////////////////////////////////////////////////
float4 main (float2 TexCoords: TEXCOORD0): COLOR
{
    GBuffer GBuffer = UnpackGBuffer(TexCoords);
    LightingData Light = UnpackLightingAccumulator(TexCoords);
    
    float3 AmbientLighting = CalculateAmbientWithBlurredEnvironment (GBuffer.AO, GBuffer.Normal, invert (GBuffer.Glossiness)) * GBuffer.BakedAO;
    
    AmbientLighting *= tex2Dlod0(s_ao, TexCoords).r;
    
    float3 DiffuseLighting = AmbientLighting + Light.Diffuse;
	
    float3 SceneColor = mad (GBuffer.Albedo, DiffuseLighting, Light.Specular);
    
    float Fog = CalcFogness (GBuffer.Position);
    SceneColor = lerp (SceneColor, fog_params.rgb, Fog);
    float Opacity = pow (Fog, 2.2f);
	
    SceneColor = CalcTonemap (SceneColor);
    
    return float4 (SceneColor, Opacity);
}
////////////////////////////////////////////////////////////////////////////
