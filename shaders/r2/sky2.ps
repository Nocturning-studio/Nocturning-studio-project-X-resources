//////////////////////////////////////////////////////////////////////////////////////////
#include "common.xrh"
//////////////////////////////////////////////////////////////////////////////////////////
struct Interpolators
{
    float4 HomogeniousPosition: POSITION;
    float4 Color: COLOR0;
    float3 UV0: TEXCOORD0;
    float3 UV1: TEXCOORD1;
};
//////////////////////////////////////////////////////////////////////////////////////////
uniform samplerCUBE s_sky0;
uniform samplerCUBE s_sky1;
//////////////////////////////////////////////////////////////////////////////////////////
// Pixel
float4 main (Interpolators Input): COLOR0
{
    float3 SkyActual = texCUBE (s_sky0, Input.UV0);
    float3 SkyNext = texCUBE (s_sky1, Input.UV1);
    float3 Sky = lerp (SkyActual, SkyNext, Input.Color.w);

    Sky = sRgbToLinear(Sky);

    Sky *= 2.0f;

    Sky = exponential_tonemapping(Sky);

    Sky = LinearTosRgb(Sky);

    Sky = lerp (Sky, fog_color.rgb, fog_sky_influence);

    return float4 (Sky, 1.0f);
}
//////////////////////////////////////////////////////////////////////////////////////////