///////////////////////////////////////////////////////////////////////////////////
// Created: 25.10.2023
// Author: Deathman
// Nocturning studio for NS Project X
///////////////////////////////////////////////////////////////////////////////////
#include "common.h"
#include "gbuffer.h"
#include "fxaa_atoc.h"
#include "alpha_test.h"
////////////////////////////////////////////////////////////////////////////////
struct Interpolators
{
    float4 HomogeniousPosition: POSITION;
    float2 UV: TEXCOORD0;
    float3 Position: TEXCOORD1;
    float3 Normal: TEXCOORD2;
	float4 Color: COLOR0;
};
///////////////////////////////////////////////////////////////////////////////////
GBufferPacked main (Interpolators Input)
{
    GBuffer GBuffer;
    
	float3 Albedo;
    float Opacity;
	
#if defined(USE_ALPHA_TEST) && (ALPHA_TEST_AA == FXAA_ATOC)
    calc_fxaa_atoc(Input.UV, Albedo, Opacity);
#else//USE_ALPHA_TEST && (ALPHA_TEST_AA == FXAA_ATOC)
    Albedo = tex2D(s_base, Input.UV).rgb;
    Opacity = tex2D(s_base, Input.UV).a;
#endif//USE_ALPHA_TEST && (ALPHA_TEST_AA == FXAA_ATOC)

    calc_alpha_test (Input.UV, Opacity);

    GBuffer.Albedo = Albedo * Input.Color.rgb;
    
    GBuffer.Normal = normalize (Input.Normal);

    GBuffer.Position = Input.Position;
    
    GBuffer.AO = 0.5f;
    
    GBuffer.BakedAO = 1.0f;
    
    GBuffer.Roughness = 1.0f;
    
    GBuffer.Metallness = 0.0f;

    GBuffer.Subsurface = 0.0f;

    return PackGBuffer (GBuffer);
}
///////////////////////////////////////////////////////////////////////////////////