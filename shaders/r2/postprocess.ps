//////////////////////////////////////////////////////////////////////////////////////////
#include "common.h"
//////////////////////////////////////////////////////////////////////////////////////////
struct v2p
{
	float4 color: COLOR0; // multiplier, color.w = noise_amount
	float4 gray: COLOR1; // (.3,.3,.3.,amount)
 	float2 tc0: TEXCOORD0; // base1 (duality)
 	float2 tc1: TEXCOORD1; // base2 (duality)
 	float2 tc2: TEXCOORD2; // base  (noise)
};
//////////////////////////////////////////////////////////////////////////////////////////
uniform sampler2D s_base0;
uniform sampler2D s_base1;
uniform sampler2D s_noise;
uniform float4 c_brightness;
//////////////////////////////////////////////////////////////////////////////////////////
// Pixel
float4 main (v2p I): COLOR
{
	float3 t_0 = tex2Dlod0 (s_base0, I.tc0);
	float3 t_1 = tex2Dlod0 (s_base1, I.tc1);
	float3 image = (t_0 + t_1) * .5;
    float gray = dot (image, I.gray);
    image = lerp (gray, image, I.gray.w);

	float4 t_noise = tex2Dlod0 (s_noise, I.tc2);
	float3 noised = image * t_noise * 2;
    image = lerp (noised, image, I.color.w);
    image = (image * I.color + c_brightness) * 2;
    
    return float4 (image, 1);
}
//////////////////////////////////////////////////////////////////////////////////////////
