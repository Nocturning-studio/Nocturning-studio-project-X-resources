////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
https://www.shadertoy.com/view/llj3Dw

  Written by Alan Wolfe
  http://demofox.org/
  http://blog.demofox.org/


4-Rook anti aliasing works by using 4 samples per pixel in the following configuration:


  +-----------+
  |  |  |A |  |
  |--|--|--|--|
  |D |  |  |  |
  |--|--|--|--|
  |  |  |  |B |
  |--|--|--|--|
  |  |C |  |  |
  +-----------+


A,B,C,D have a weight of 0.25.

This makes for AA that is not quite as blurry looking as quincunx, but unlike
quincunx you can't share samples between pixels.  This is straight up 4x SSAA!

More info here:
http://blog.demofox.org/2015/04/23/4-rook-antialiasing-rgss/
*/
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Implemented to NS Project X by Deathman
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "common.h"
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
float4 main (float2 TexCoords: TEXCOORD0): COLOR
{
    const float S = 1.0h / 8.0h;
    const float L = 3.0h / 8.0h;
    
    float4 SampleColor0 = tex2Dlod0 (s_image, TexCoords + float2 (S, -L) / screen_res.xy);
    float4 SampleColor1 = tex2Dlod0 (s_image, TexCoords + float2 (L, S) / screen_res.xy);
    float4 SampleColor2 = tex2Dlod0 (s_image, TexCoords + float2 (-S, -L) / screen_res.xy);
    float4 SampleColor3 = tex2Dlod0 (s_image, TexCoords + float2 (-L, -S) / screen_res.xy);
    
    return (SampleColor0 + SampleColor1 + SampleColor2 + SampleColor3) * 0.25h;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
