#include "common.xrh"
#include "gbuffer.xrh"

struct v2p
{
 	float2 tc0: TEXCOORD0; // base
	float4 c: COLOR0; // diffuse
	float4 tctexgen	: TEXCOORD1;
	float3 position: TEXCOORD2;
};

struct PixelShaderOutputStruct
{
	float4 Generic_0: COLOR0;
	float4 Position: COLOR1;
};
//////////////////////////////////////////////////////////////////////////////////////////
PixelShaderOutputStruct main (v2p I)
{
	float4 distort = tex2D (s_distort, I.tc0);
    float factor = distort.a * dot (I.c.rgb, 0.33f);

	float2	zero = float2( 0.5, 0.5);
	float	alphaDistort;
	float Depth = GetPosition(I.tctexgen.xy/I.tctexgen.w).z;
	float spaceDepth = Depth - I.tctexgen.z;
	alphaDistort = saturate(1.3*spaceDepth);
	distort.xy = lerp  ( zero, distort.xy, alphaDistort);

    distort.rgb = float3(0, 0, 1);
	
	// Deathman - считаем туман второй раз, но теперь специально для этого конкретного объекта
    float Fog = CalcFogness (I.position);
    distort.rgb = ApplyFogness(distort.rgb, Fog);
    factor *= 1.0f - pow (Fog, 2.2f);
	
    PixelShaderOutputStruct Output;
    Output.Generic_0 = float4(distort.rgb, factor);
    Output.Position = PackPositionAndNormal(I.position, NULL);
    return Output;
}
