////////////////////////////////////////////////////////////////////////////
//	Created		: 09.03.2024
//	Author		: Deathman
//  Nocturning studio for NS Project X
////////////////////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////////////////////
// Inverting
#define invert(x) 1.0f - x
////////////////////////////////////////////////////////////////////////////
// Myltiply add
#define mad(m, a, b) m * a + b

// Multiply + Saturation
#define mul_sat(a, b) saturate(mul(a, b))

// Multiply add + Saturation
#define mad_sat(m, a, b) saturate(mad(m, a, b))
////////////////////////////////////////////////////////////////////////////
// Average functions
float avg2(float2 tex)
{
    return (tex.x + tex.y) * 0.5f;
};

float avg3(float3 tex)
{
    return (tex.x + tex.y + tex.z) * 0.3333333f;
};

float avg4(float4 tex)
{
    return (tex.x + tex.y + tex.z + tex.w) * 0.25f;
};
////////////////////////////////////////////////////////////////////////////
// Tex2D functions
float4 tex2Dlod0(sampler2D smp, float2 tc)
{
    return tex2Dlod(smp, float4(tc, 0.0f, 0.0f));
}
////////////////////////////////////////////////////////////////////////////
// Approximation functions for sin/cos created by Skye Adaire
////////////////////////////////////////////////////////////////////////////
#define tauinv32 0.1591549431f
////////////////////////////////////////////////////////////////////////////
float sinapprox(float x)
{
    float f = abs(frac(x * tauinv32 - 0.25) - 0.5);
    return f * f * (24.0 - 32.0 * f) - 1.0;
}
////////////////////////////////////////////////////////////////////////////
// the same as sin but with an x shift
float cosapprox(float x)
{
    float f = frac(x * tauinv32 + 0.25);
    float c = abs(f * 2.0 - 1.0) * 2.0 - 1.0;
    return (1.0 - c * c) * sign((1.0 - f) * 2.0 - 1.0);
}
////////////////////////////////////////////////////////////////////////////

